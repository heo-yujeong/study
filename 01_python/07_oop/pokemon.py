import random

class 푸키먼:
    # 모든 포켓몬은 고유 번호를 가진다
    # 각 인스턴스의 고유번호가 아닌, 종류 마다 n번의 고유번호를 가진다
    # 클래스 변수로 설정
    고유번호 = '모든 포켓몬은 고유 번호를 가진다'

    현재_발견된_총_푸키먼_수 = 0
    푸키먼_종류 ={}

    # 매직메서드 - 생성자
    def __init__(self, 종, 타입, 속도, 스킬1='몸통 박치기', 체력=100, 레벨=1): # 인스턴스 메서드
        self.종 = 종
        self.타입 = 타입
        self.속도 = 속도
        self.스킬1 = 스킬1
        self.체력 = 체력
        self.레벨 = 레벨
        푸키먼.새로운_포켓몬이_탄생했다(종)
        self.고유번호 = 푸키먼.푸키먼_종류[종][0]

    # 인스턴스 메서드 : 해당 클래스들의 모든 인스턴스들이 공통적으로 하는 일 (함수)
    def 스킬1사용(self):
        # 단순 문구 출력
        print(f'{self.종}은/는 {self.스킬1}을 사용하였다.')
        # 추가 조건에 따른 서로 다른 경우 출력
        # 무작위 정수를 뽑아, 그 값에 따라 서로 다른 결과 출력
        주사위 = random.randint(1, 6) # 1 ~ 6까지 수 중 랜덤하게 1개 출력
        if 주사위 == 6:
            print('효과는 굉장했다.')
        elif 주사위 >= 3:
            print('적에게 적중했다.')
        else:
            print('그러나 아무일도 일어나지 않았다.')

    # 클래스 메서드 : 클래스의 변수를 변경시키거나, 혹은 클래스와 관련된 어떠한 속성(행위)를 실행하는 함수
    @classmethod
    def 새로운_포켓몬이_탄생했다(cls, 종):
        # 호출된 순간 = 인스턴스 생성된 순간
        cls.현재_발견된_총_푸키먼_수 += 1
        # 만약 처음 발견한 종이라면
        if 종 not in cls.푸키먼_종류:
            print('한 번도 본 적 없던 푸키먼이다!')
            cls.푸키먼_종류[종] = [len(cls.푸키먼_종류) + 1, 1]
            print(f'{종}! 앞으로 너의 고유 번호는 {cls.푸키먼_종류[종][0]}번이야!')
        # 아니라면
        else:
            print(f'{종}의 개체수가 1 증가하였다.')
            cls.푸키먼_종류[종][1] += 1
            print(f'{종}의 총 개체수는 {cls.푸키먼_종류[종][1]}')

    # 스태틱 메서드 : 클래스의 변수나 속성, 인스턴스의 변수나 속성에 영향을 미치거나 필요로 하지 않은 행동에 대한 메서드
    @staticmethod
    def 푸키먼이란(): # 해당 클래스에 대한 설명이 필요로 할 때
        return '포켓몬이란... 일본의 게임을 기반으로 한... 어쩌구 저쩌구'
    
    # 클래스의 어떠한 행위이나, 직접적인 클래스 변수가 아닌 다른 값, 이 클래스와 연관되어 있는 어떠한 행위들
    # 모든 포켓몬에게 동일한 값, 필요한 경험치를 알려줄 때(레벨에 따라 달라지는 경험치를 반환)
    # 아래의 두 가지는 다른 정보를 알려줌!(구분 잘해!)
    @staticmethod
    def 특정_레벨의_경험치요구량(lv):
        return lv * 200
    
    def 현재_내_레벨의_경험치_요구량(self):
        return self.lv * 200

    # 소멸자
    # def __del__(self):
    #     print('소멸될 때 실행됩니다.')
    #     print(f'{self.종}')


    # 매직 메서드
    def __call__(self):
        return self.종[:2] * 2
    
    def __str__(self):
        # 사용자(개발자 아님)를 위한 정보
        return f'레벨 : {self.레벨} \n체력 : {self.체력} \n보유스킬 : {self.스킬1}'
    
    def __repr__(self):
        #사용자(개발자)를 위한 정보
        # 해당 객체가 어떤 데이터 타입이고, 어떤 속성을 가졌는지, 어떤 형식으로 재사용 가능한지,
        # 어떤 유형의 메서드들을 사용가능한지에 대한 가이드가 될 수 있는 정보
        return '푸키먼()'


# 피카츄 = 푸키먼() # 푸키먼 클래스의 인스턴스를 생성 후 피카츄 변수에 할당
# 생성자 생성 전에만 가능! 이후에는 인자가 부족해서 생성 X
# __init__() missing 3 required positional arguments: '종', '타입', and '속도'

피카츄1 = 푸키먼(종= '피카츄', 타입= '전기', 속도=100)
피카츄2 = 푸키먼('피카츄', '전기', 110)

파이리 = 푸키먼('파이리', '불', 60)

print(푸키먼.현재_발견된_총_푸키먼_수)
print(푸키먼.푸키먼_종류)

print('-' * 30)
print(피카츄1.고유번호)
print(피카츄2.고유번호)
print(파이리.고유번호)

print('-' * 30)
print(f'피카츄를 부르면 {피카츄1()}하고 웁니다.')

print(피카츄1) # __str__

# print(피카츄1.고유번호) # 따로 설정된 적이 없어서 클래스 변수로 찾아감
# print(피카츄2.고유번호)
# print(푸키먼.고유번호)

# print(피카츄1.종)
# print(피카츄2.종)

# print(피카츄1.속도)
# print(피카츄2.속도)

# # print(피카츄1.없는변수) # AttributeError: '푸키먼' object has no attribute '없는변수'
# # 피카츄1(인스턴스)에 없고, 푸키먼(클래스)에도 없으니 error

# # 글로벌_변수 = '반성문을 영어로하면 글로벌'
# # print(피카츄1.글로벌_변수) 
# # AttributeError: '푸키먼' object has no attribute '글로벌_변수'
# # 내 영역안에서만 찾아보기 때문에 global scope로 가지X

# # 각 인스턴스로 인스턴스 메서드 호출
# 피카츄1.스킬1사용()
# 피카츄2.스킬1사용()


# 피카츄1.고유번호 = 1
# print(피카츄1.고유번호) # 1
# print(피카츄2.고유번호) # 모든 포켓몬은 고유 번호를 가진다
# # 같은 종인데 다른 고유번호를 가짐..!
# # 본인의 영역만 바꿈. 클래스 변수는 바뀌지 않는다


# 정의되어 있지 않은 변수 사용 가능(오류X)
피카츄1.없는변수 = '내 맘대로'
print(피카츄1.없는변수)

# 상속
class 피카츄(푸키먼):
    def __init__(self, 종='피카츄', 타입='전기', 속도=100, 스킬1='몸통 박치기', 체력=100, 레벨=1):
        super().__init__(종='피카츄', 타입='전기', 속도=100, 스킬1='몸통 박치기', 체력=100, 레벨=1)

피카츄3 = 피카츄()